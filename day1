打开终端     ls
shell 命令解析器. 根据命令，调用可执行的程序
history 历史命令
crtl + p 往上翻命令 +n 往下翻命令
ctrl + B 对输入的命令往前走
ctrl + A 调到行首
ctrl + E 调到行末
ctrl + F 删除当前光标前面的字符
ctrl + D 删除当前光标所覆盖的字符（光标后面的字符）
ctrl + U 删除当前光标前面的字符
ctrl + L 清屏 
TAB建   自动补全 ，当有多个命令的前缀相同时，再点击一次TAB键，这样就能选择自己想要的命令了.
cd 命令 当对文件进行操作 当确认该目录下有这个文件的时候，按一次TAB会自动补齐；按；两次TAB键会打开目录
ls / 查看linux的根目录
ls -a 查询所有文件（包括隐藏文件）
ls -l 每一个目录或者文件的详细的信息
（对信息的一个介绍：
首先是10个字符 第一个字符对应文件类型（如果是目录的话，只是当前目录所占有空间，不包括它拥有的文件），所有者的权限后面三个字符（r -> 读 , w -> 写 , x -> 执行 ）.
再三个（同组用户，都具有那些权限），再三个（其他人都具有哪些权限）
数字，代表文件的硬链接数（非快捷方式） 该文件或者目录的所有者，该文件所属的目录或者组，占用的内存空间，文件最后的修改时间，文件名
cd /(目录名) 进入该目录
cd ..   返回上一层目录
pwd  当前目录
/boot linux的核心文件，不要乱动
/lost + found 非法关机之后，存放了一些文件
/opt 安装第三方目录的地方 
/proc 对内存的一个映射
/sbin 管理员使用的程序


比较重要的命令：
/root 超级权限者的用户主目录
/usr 用户软件资源目录，存放当前用户安装的软件. 默认的安装路径 （不要误删除）
/bin 存放着最经常使用的命令（不要误删除）
/dev 存放外部设备
/etc   存放配置文件（不要误删除）
/home   用户的主目录
/lib 动态共享库
/media 电脑自动挂载外设
/mnt   当自动挂载外设失败时，手动挂载

用户命令：
从根目录开始写 -> 绝对路径
相对当前的目录 -> 相对路径
. -> 当前目录
.. -> 当前的上一个目录
-  -> 在临近两个目录之间切换
itcast@ubuntu: ~$
itcast 当前登录用户
@ 在
ubuntu 主机名
~： 用户的家目录（宿主目录）
$： 当前用户为普通用户
#： 当前用户为超级用户 -> root用户

 命令
 文件和目录的操作
 tree 树状结构罗列，如果后面不附加，则是所有的目录；如果要查看制定目录，直接输文件名即可 
 注意不同的颜色对应不同的文件属性
ls / 查看linux的根目录
touch 创建文件
ls -a 查询所有文件（包括隐藏文件）
ls -l 每一个目录或者文件的详细的信息
ls -R 递归列出文件 , 和tree作用相同
mkdir + 文件名 创建文件
mkdir  dir/dir1/dir2 -p  创建文件套文件（或者 mkdir -p  dir/dir1/dir2 ）
rmdir + 文件名 删除空目录（非空目录无法删除）
rm  目录名 -r  删除目录（非空同样适合），之所以用 -r 是通过递归的形式来删除（或者 rm -r  目录名 ）
rm  目录名 -i  每次删除询问
rm  目录名 -ri aa 递归删除每次删除之前的询问操作
touch 文件名 文件不存在，创建文件（可以不加后缀）. 文件存在，修改时间(注意加上文件类型)
(拷贝文件)cp 文件一 文件二 如果文件二不存在，则创建文件二，并且赋值；如果文件二存在，覆盖掉原来文件二的内容.
(拷贝目录) cp 目录一 目录二 -r （累加，直接把目录一赋值给目录二），如果目录二不存在，先创建目录二.
  
查看文件内容
如果文件过长，在终端可能会出现无法完全显示.
cat 打开文件
more 文件名 每次显示部分（每次回车出一行，每次空格分页）（只能往后看）
q 或者（ctrl + c）退出
less 文件名   ctrl + P 往前倒，ctrl + B 往前翻页. 其他和more类似
head 文件名 默认显示文件前10行
tail 文件名 默认显示文件后10行
head -5 文件名  显示文件前5行


mv命令
mv 文件名原来的名称  文件新的名称 ->  对文件进行重命名
mv 文件的名称  要移动到哪个位置  -> 对文件从一个地方搬到另一个地方
所以说，如果文件要移动到的位置找不到的话，就会对文件进行重命名操作

软连接的创建
给文件/目录创建快捷方式
ln -s 文件名 软连接名称
这样的快捷方式只能在当前的目录下才能运行， 无论是往上移动还是往下移动之后，都无法打开.
如果是要设计成无论这个文件移动到哪里，可以通过设置绝对路径来实现. 
ln -s ~文件的绝对路径 文件名
这样之后再去移动文件，都能指向原来的文件 
如果是移动目录的话，和文件的方法是类似的. 

硬链接的创建
ln 文件名 硬链接的名称（硬链接并不占用磁盘空间，通过映射，任意修改一个硬链接，原来的数据也会变）
硬链接与软链接的区别：
硬链接和源文件指向的是同一块，如果硬链接和源文件中的一个修改时，硬链接和源文件都是同步修改的，如果源文件丢失的话，硬链接还是有效的；软连接相当于一个快捷方式，当源文件改变
，软连接连向的内容还是会改变的; 
如果对源文件进行修改的话，软连接和硬链接所代表的内容都会被改变.
https://blog.csdn.net/gao_zhennan/article/details/79127232 
目录无法创建硬链接，只有文件可以创建硬链接.

文件或目录的属性
wc 获取文本文件名（非二进制文件）
num1（行数） num2（单词的个数（通过空格个数）） num3（字节数）   文件名
od -t  查看二进制文件（可执行文件） （ 执行 可执行文件的方法  ./文件名）
du -h 查看当前目录所占大小
df -h 磁盘的使用情况

which命令 
which 命令   查看指定命令所在的路径

查看和修改文件的权限
whoami 查看当前用户名
修改文件权限的方法：
一， chmod [who(文件所有者u，同组用户g，其他人o，所有的人a)] [+(增加权限)，-（减少权限），=（覆盖权限）] [mod(r 读，w 写，x执行)] 文件名
 ex ： chomd o+w hqx2.txt
 二，数字设定法
   -：没有权限
   r：4 （读权限）
   w：2  
   x：1
  7 -rwx-  文件所有者  
  6 -rw -  文件所属组
  5 -rx -  其他人
   满足累加法
   777 三种人的多个权限
   chmod 777 hqx3.txt
   同样符合减法，加法权限
   chmod -001 hqx3.txt

修改文件所有者，所属组：
注意区分文件所属组，所有者，其他人
chown 新的所有者 文件名  （如果非法可以临时借用管理员权限. sudo + .....）
sudo chown 新的所有者：新的组 文件名
sudo chgrp 新的组 文件名
只有当目录有指向权限的时候，才能对目录进行操作

文件的查找

 一，按照文件属性查找：
 find + 查找的目录 + -name + "文件的名字"(记得带引号)
  输出对应文件的地址
  （当不知道查找的内容全名的时候，"hq*"(*表示通配的字符串)，"hq?" (?表示通配一个字符）)
 二，按照文件大小查找
 find + 查找的目录  -size   10k （大于等于10k）（M的时候需要大写）
 find + 查找的目录  -size   -10k（小于等于10k）
 find + 查找的目录  -size  +10M -size -100M (大于10M小于100M )
 三，按照文件类型
 普通文件   f
 目录       d 
 链接符号   l
 块设备     b
 字符设备   c
 socket文件 s
 管道 -p
 find + 查找目录 -type d/f/l/b/c/s/p 
 四，按照文件内容查找
 grep -r "查找的内容" + 查找的路径（对比）
 
 
 软件的安装和卸载
 一，
 1.在线安装
 sudo apt-get install 软件名称     软件安装
 sudo apt-get remove  软件名称      软件移除 
 sudo apt-get update  更新软件列表(并不是直接更新软件，而是更新软件的更新地址)
 sudo apt-get clean 清理所有软件的安装包
 2.aptitude
 aptitude
 二，deb包安装
 sudo  dpkg -i（看成install） 文件名
 deb包卸载
 sudo dpkg  -r（看成remove） 名字
 三，源码安装
 解压缩源代码包
 进入到安装目录 cd dir
 检测文件是否缺失 ，创建Mkefile， 检测编译环境； ./config
 编译源码，生成库和可执行程序 make 
 把库和可执行程序安装到系统目录下 sudo make install
 删除和卸载软件 sudo make distclean
 以README文件为准
 
 
